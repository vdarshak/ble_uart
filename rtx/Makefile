TARGET := MICROBIT
BSPDIR := ../bsp
RTOSDIR := .
GCCARM=/opt/arm-gcc
ARCH=arch

CC=arm-none-eabi-gcc
AS=arm-none-eabi-as
LD=arm-none-eabi-ld
AR=arm-none-eabi-ar
OBJCOPY=arm-none-eabi-objcopy
SIZE=arm-none-eabi-size

SRC += startup.c main.c

RTOS_SRC += os_systick.c rtx_delay.c rtx_evflags.c rtx_evr.c rtx_kernel.c
RTOS_SRC += rtx_lib.c rtx_memory.c rtx_mempool.c rtx_msgqueue.c rtx_mutex.c
RTOS_SRC += rtx_semaphore.c rtx_system.c rtx_thread.c rtx_timer.c RTX_Config.c

RTOS_ASM += irq_armv7m.S

OBJS = $(subst .c,.o,$(SRC))

RTOS_OBJS += $(subst .c,.o,$(RTOS_SRC))
RTOS_OBJS += $(subst .S,.o,$(RTOS_ASM))

# C flags common to all targets
CFLAGS += -I$(BSPDIR)           # BSP header files
CFLAGS += -I$(ARCH)             # architecture specific header files
CFLAGS += -O3 -g3               # optimization
CFLAGS += -Wall -Werror         # treat all warnings as errors
CFLAGS += -mcpu=cortex-m4       # CPU architecture
CFLAGS += -mthumb -mabi=aapcs   # code generation options
CFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16    # floating point unit

# keep every function in a separate section, this allows linker to discard unused ones
CFLAGS += -ffunction-sections -fdata-sections -fno-strict-aliasing -fno-builtin

ASMFLAGS += -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16

# Linker flags
LDFLAGS := -T $(BSPDIR)/nrf52833.ld     # linker command file
LDFLAGS += -Map rtos.map        # linker map file
LDFLAGS += --entry ResetISR     # executable entry point
LDFLAGS += --gc-sections        # let linker dump unused sections

# Add standard libraries at the very end of the linker input, after all objects
# that may need symbols provided by these libraries.
LIBS := -L$(BSPDIR) -lbsp -L$(RTOSDIR) -lrtx \
        $(GCCARM)/arm-none-eabi/lib/thumb/v7e-m+fp/hard/libm.a \
        $(GCCARM)/arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a \
        $(GCCARM)/lib/gcc/arm-none-eabi/12.2.1/thumb/v7e-m+fp/hard/libgcc.a \

.SUFFIXES: .c .i .S .o .out .hex

.c.o:
	$(CC) -c $(CFLAGS) $<

.c.i:
	$(CC) -E $(CFLAGS) $< > $@

.c.S:
	$(CC) -S $(CFLAGS) $<

.S.i:
	$(CC) -E $(CFLAGS) $< > $@

.S.o:
	$(CC) -c $(ASMFLAGS) $< -o $@

.out.hex:
	$(OBJCOPY) -O ihex $< $@

all: flash

flash: $(TARGET).hex
	@cmd.exe /c copy $(TARGET).hex E:

$(TARGET).out: $(OBJS) librtx.a
	$(LD) $(LDFLAGS) $(OBJS) $(LIBS) -o $@
	$(SIZE) $@

librtx.a: $(RTOS_OBJS)
	$(AR) -r $@ $(RTOS_OBJS)

clean:
	/bin/rm -f $(OBJS) $(RTOS_OBJS) $(TARGET).out $(TARGET).hex librtx.a rtos.map

# Dependencies

depend:
	@$(CC) -MM $(CFLAGS) $(SRC) $(RTOS_SRC) $(RTOS_ASM)

# The following lines can be auto-generated by make depend

startup.o: $(BSPDIR)/startup.c
main.o: main.c ../bsp/board.h ../bsp/gpio.h ../bsp/uart.h \
 ../bsp/pwm.h ../bsp/adc.h ../bsp/audio.h ../bsp/lib.h \
 cmsis_os2.h
os_systick.o: os_systick.c os_tick.h RTE_Components.h arch/ARMCM4_FP.h \
 arch/core_cm4.h arch/cmsis_version.h arch/cmsis_compiler.h \
 arch/cmsis_gcc.h arch/mpu_armv7.h arch/system_ARMCM4.h
rtx_delay.o: rtx_delay.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_evflags.o: rtx_evflags.c rtx_lib.h rtx_def.h RTX_Config.h \
 rtx_core_c.h RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h \
 arch/cmsis_version.h arch/cmsis_compiler.h arch/cmsis_gcc.h \
 arch/mpu_armv7.h arch/system_ARMCM4.h rtx_core_cm.h os_tick.h \
 cmsis_os2.h rtx_os.h rtx_evr.h
rtx_evr.o: rtx_evr.c arch/cmsis_compiler.h arch/cmsis_gcc.h rtx_evr.h \
 rtx_os.h cmsis_os2.h rtx_def.h RTX_Config.h
rtx_kernel.o: rtx_kernel.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_lib.o: rtx_lib.c rtx_os.h cmsis_os2.h rtx_def.h RTX_Config.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h rtx_evr.h
rtx_memory.o: rtx_memory.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_mempool.o: rtx_mempool.c rtx_lib.h rtx_def.h RTX_Config.h \
 rtx_core_c.h RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h \
 arch/cmsis_version.h arch/cmsis_compiler.h arch/cmsis_gcc.h \
 arch/mpu_armv7.h arch/system_ARMCM4.h rtx_core_cm.h os_tick.h \
 cmsis_os2.h rtx_os.h rtx_evr.h
rtx_msgqueue.o: rtx_msgqueue.c rtx_lib.h rtx_def.h RTX_Config.h \
 rtx_core_c.h RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h \
 arch/cmsis_version.h arch/cmsis_compiler.h arch/cmsis_gcc.h \
 arch/mpu_armv7.h arch/system_ARMCM4.h rtx_core_cm.h os_tick.h \
 cmsis_os2.h rtx_os.h rtx_evr.h
rtx_mutex.o: rtx_mutex.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_semaphore.o: rtx_semaphore.c rtx_lib.h rtx_def.h RTX_Config.h \
 rtx_core_c.h RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h \
 arch/cmsis_version.h arch/cmsis_compiler.h arch/cmsis_gcc.h \
 arch/mpu_armv7.h arch/system_ARMCM4.h rtx_core_cm.h os_tick.h \
 cmsis_os2.h rtx_os.h rtx_evr.h
rtx_system.o: rtx_system.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_thread.o: rtx_thread.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
rtx_timer.o: rtx_timer.c rtx_lib.h rtx_def.h RTX_Config.h rtx_core_c.h \
 RTE_Components.h arch/ARMCM4_FP.h arch/core_cm4.h arch/cmsis_version.h \
 arch/cmsis_compiler.h arch/cmsis_gcc.h arch/mpu_armv7.h \
 arch/system_ARMCM4.h rtx_core_cm.h os_tick.h cmsis_os2.h rtx_os.h \
 rtx_evr.h
RTX_Config.o: RTX_Config.c arch/cmsis_compiler.h arch/cmsis_gcc.h \
 rtx_os.h cmsis_os2.h rtx_def.h RTX_Config.h
irq_armv7m.o: irq_armv7m.S rtx_def.h RTX_Config.h
